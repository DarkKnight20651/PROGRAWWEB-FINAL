/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as AuthRoutesImport } from './routes/_auth/routes'
import { Route as AuthPerfilImport } from './routes/_auth/perfil'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'
import { Route as AuthClientRouteImport } from './routes/_auth/_client.route'
import { Route as AuthAdminRouteImport } from './routes/_auth/_admin.route'
import { Route as AuthClientSubirDocumentosImport } from './routes/_auth/_client/subir-documentos'
import { Route as AuthClientRealizarExamenImport } from './routes/_auth/_client/realizar-examen'
import { Route as AuthAdminRevisarDocumentosImport } from './routes/_auth/_admin/revisar-documentos'
import { Route as AuthAdminAdministrarClientesImport } from './routes/_auth/_admin/administrar-clientes'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoutesRoute = AuthRoutesImport.update({
  id: '/_auth/routes',
  path: '/routes',
  getParentRoute: () => rootRoute,
} as any)

const AuthPerfilRoute = AuthPerfilImport.update({
  id: '/_auth/perfil',
  path: '/perfil',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/_auth/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthClientRouteRoute = AuthClientRouteImport.update({
  id: '/_auth/_client',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminRouteRoute = AuthAdminRouteImport.update({
  id: '/_auth/_admin',
  getParentRoute: () => rootRoute,
} as any)

const AuthClientSubirDocumentosRoute = AuthClientSubirDocumentosImport.update({
  id: '/subir-documentos',
  path: '/subir-documentos',
  getParentRoute: () => AuthClientRouteRoute,
} as any)

const AuthClientRealizarExamenRoute = AuthClientRealizarExamenImport.update({
  id: '/realizar-examen',
  path: '/realizar-examen',
  getParentRoute: () => AuthClientRouteRoute,
} as any)

const AuthAdminRevisarDocumentosRoute = AuthAdminRevisarDocumentosImport.update(
  {
    id: '/revisar-documentos',
    path: '/revisar-documentos',
    getParentRoute: () => AuthAdminRouteRoute,
  } as any,
)

const AuthAdminAdministrarClientesRoute =
  AuthAdminAdministrarClientesImport.update({
    id: '/administrar-clientes',
    path: '/administrar-clientes',
    getParentRoute: () => AuthAdminRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_admin': {
      id: '/_auth/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_client': {
      id: '/_auth/_client'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthClientRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/perfil': {
      id: '/_auth/perfil'
      path: '/perfil'
      fullPath: '/perfil'
      preLoaderRoute: typeof AuthPerfilImport
      parentRoute: typeof rootRoute
    }
    '/_auth/routes': {
      id: '/_auth/routes'
      path: '/routes'
      fullPath: '/routes'
      preLoaderRoute: typeof AuthRoutesImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_admin/administrar-clientes': {
      id: '/_auth/_admin/administrar-clientes'
      path: '/administrar-clientes'
      fullPath: '/administrar-clientes'
      preLoaderRoute: typeof AuthAdminAdministrarClientesImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/_admin/revisar-documentos': {
      id: '/_auth/_admin/revisar-documentos'
      path: '/revisar-documentos'
      fullPath: '/revisar-documentos'
      preLoaderRoute: typeof AuthAdminRevisarDocumentosImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/_client/realizar-examen': {
      id: '/_auth/_client/realizar-examen'
      path: '/realizar-examen'
      fullPath: '/realizar-examen'
      preLoaderRoute: typeof AuthClientRealizarExamenImport
      parentRoute: typeof AuthClientRouteImport
    }
    '/_auth/_client/subir-documentos': {
      id: '/_auth/_client/subir-documentos'
      path: '/subir-documentos'
      fullPath: '/subir-documentos'
      preLoaderRoute: typeof AuthClientSubirDocumentosImport
      parentRoute: typeof AuthClientRouteImport
    }
  }
}

// Create and export the route tree

interface AuthAdminRouteRouteChildren {
  AuthAdminAdministrarClientesRoute: typeof AuthAdminAdministrarClientesRoute
  AuthAdminRevisarDocumentosRoute: typeof AuthAdminRevisarDocumentosRoute
}

const AuthAdminRouteRouteChildren: AuthAdminRouteRouteChildren = {
  AuthAdminAdministrarClientesRoute: AuthAdminAdministrarClientesRoute,
  AuthAdminRevisarDocumentosRoute: AuthAdminRevisarDocumentosRoute,
}

const AuthAdminRouteRouteWithChildren = AuthAdminRouteRoute._addFileChildren(
  AuthAdminRouteRouteChildren,
)

interface AuthClientRouteRouteChildren {
  AuthClientRealizarExamenRoute: typeof AuthClientRealizarExamenRoute
  AuthClientSubirDocumentosRoute: typeof AuthClientSubirDocumentosRoute
}

const AuthClientRouteRouteChildren: AuthClientRouteRouteChildren = {
  AuthClientRealizarExamenRoute: AuthClientRealizarExamenRoute,
  AuthClientSubirDocumentosRoute: AuthClientSubirDocumentosRoute,
}

const AuthClientRouteRouteWithChildren = AuthClientRouteRoute._addFileChildren(
  AuthClientRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '': typeof AuthClientRouteRouteWithChildren
  '/dashboard': typeof AuthDashboardRoute
  '/perfil': typeof AuthPerfilRoute
  '/routes': typeof AuthRoutesRoute
  '/administrar-clientes': typeof AuthAdminAdministrarClientesRoute
  '/revisar-documentos': typeof AuthAdminRevisarDocumentosRoute
  '/realizar-examen': typeof AuthClientRealizarExamenRoute
  '/subir-documentos': typeof AuthClientSubirDocumentosRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '': typeof AuthClientRouteRouteWithChildren
  '/dashboard': typeof AuthDashboardRoute
  '/perfil': typeof AuthPerfilRoute
  '/routes': typeof AuthRoutesRoute
  '/administrar-clientes': typeof AuthAdminAdministrarClientesRoute
  '/revisar-documentos': typeof AuthAdminRevisarDocumentosRoute
  '/realizar-examen': typeof AuthClientRealizarExamenRoute
  '/subir-documentos': typeof AuthClientSubirDocumentosRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_auth/_admin': typeof AuthAdminRouteRouteWithChildren
  '/_auth/_client': typeof AuthClientRouteRouteWithChildren
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/perfil': typeof AuthPerfilRoute
  '/_auth/routes': typeof AuthRoutesRoute
  '/_auth/_admin/administrar-clientes': typeof AuthAdminAdministrarClientesRoute
  '/_auth/_admin/revisar-documentos': typeof AuthAdminRevisarDocumentosRoute
  '/_auth/_client/realizar-examen': typeof AuthClientRealizarExamenRoute
  '/_auth/_client/subir-documentos': typeof AuthClientSubirDocumentosRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | ''
    | '/dashboard'
    | '/perfil'
    | '/routes'
    | '/administrar-clientes'
    | '/revisar-documentos'
    | '/realizar-examen'
    | '/subir-documentos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | ''
    | '/dashboard'
    | '/perfil'
    | '/routes'
    | '/administrar-clientes'
    | '/revisar-documentos'
    | '/realizar-examen'
    | '/subir-documentos'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/_auth/_admin'
    | '/_auth/_client'
    | '/_auth/dashboard'
    | '/_auth/perfil'
    | '/_auth/routes'
    | '/_auth/_admin/administrar-clientes'
    | '/_auth/_admin/revisar-documentos'
    | '/_auth/_client/realizar-examen'
    | '/_auth/_client/subir-documentos'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  AuthAdminRouteRoute: typeof AuthAdminRouteRouteWithChildren
  AuthClientRouteRoute: typeof AuthClientRouteRouteWithChildren
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthPerfilRoute: typeof AuthPerfilRoute
  AuthRoutesRoute: typeof AuthRoutesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  AuthAdminRouteRoute: AuthAdminRouteRouteWithChildren,
  AuthClientRouteRoute: AuthClientRouteRouteWithChildren,
  AuthDashboardRoute: AuthDashboardRoute,
  AuthPerfilRoute: AuthPerfilRoute,
  AuthRoutesRoute: AuthRoutesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/_auth/_admin",
        "/_auth/_client",
        "/_auth/dashboard",
        "/_auth/perfil",
        "/_auth/routes"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/signup": {
      "filePath": "signup.jsx"
    },
    "/_auth/_admin": {
      "filePath": "_auth/_admin.route.jsx",
      "children": [
        "/_auth/_admin/administrar-clientes",
        "/_auth/_admin/revisar-documentos"
      ]
    },
    "/_auth/_client": {
      "filePath": "_auth/_client.route.jsx",
      "children": [
        "/_auth/_client/realizar-examen",
        "/_auth/_client/subir-documentos"
      ]
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.jsx"
    },
    "/_auth/perfil": {
      "filePath": "_auth/perfil.jsx"
    },
    "/_auth/routes": {
      "filePath": "_auth/routes.jsx"
    },
    "/_auth/_admin/administrar-clientes": {
      "filePath": "_auth/_admin/administrar-clientes.jsx",
      "parent": "/_auth/_admin"
    },
    "/_auth/_admin/revisar-documentos": {
      "filePath": "_auth/_admin/revisar-documentos.jsx",
      "parent": "/_auth/_admin"
    },
    "/_auth/_client/realizar-examen": {
      "filePath": "_auth/_client/realizar-examen.jsx",
      "parent": "/_auth/_client"
    },
    "/_auth/_client/subir-documentos": {
      "filePath": "_auth/_client/subir-documentos.jsx",
      "parent": "/_auth/_client"
    }
  }
}
ROUTE_MANIFEST_END */
